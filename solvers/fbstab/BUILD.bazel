

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_test",
)

package(default_visibility = ["//visibility:public"])

# Linear Algebra *************************************
drake_cc_library(
	name = "static_matrix",
	srcs = ["linalg/static_matrix.h",
			"linalg/static_matrix.cc",
            "linalg/matrix_sequence.h",
            "linalg/matrix_sequence.cc"
	],
	hdrs = ["linalg/static_matrix.h",
            "linalg/matrix_sequence.h"],
)

drake_cc_binary(
    name = "static_matrix_build_test",
    srcs = ["test/static_matrix_build_test.cc"],
    deps = [":static_matrix"],
)

drake_cc_googletest( # static matrices
    name = "static_matrix_test",
    srcs = ["test/static_matrix_test.cc"],
    deps = [":static_matrix"],
)

drake_cc_googletest( # matrix sequences
    name = "matrix_sequence_tests",
    srcs = ["test/matrix_sequence_tests.cc"],
    deps = [":static_matrix"],
)


# FBstabDense *************************************
drake_cc_library( # data
    name = "dense_data",
    srcs = ["components/dense_data.h",
            "components/dense_data.cc"
    ],
    hdrs = ["components/dense_data.h"],
    deps = [":static_matrix"],
)

drake_cc_library( # variable
    name = "dense_variable",
    srcs = ["components/dense_variable.h",
            "components/dense_variable.cc"
    ],
    hdrs = ["components/dense_variable.h"],
    deps = [":static_matrix",
            ":dense_data"],
)

drake_cc_library( # residual
    name = "dense_residual",
    srcs = ["components/dense_residual.h",
            "components/dense_residual.cc"
    ],
    hdrs = ["components/dense_data.h"],
    deps = [":static_matrix",
            ":dense_variable",
            ":dense_data"],
)

drake_cc_library( # feasibility 
    name = "dense_feasibility",
    srcs = ["components/dense_feasibility.h",
            "components/dense_feasibility.cc"
    ],
    hdrs = ["components/dense_feasibility.h"],
    deps = [":static_matrix",
            ":dense_variable",
            ":dense_data"],
)

drake_cc_library( # linear solver
    name = "dense_linear_solver",
    srcs = ["components/dense_linear_solver.h",
            "components/dense_linear_solver.cc"
    ],
    hdrs = ["components/dense_linear_solver.h"],
    deps = [":static_matrix",
            ":dense_variable",
            ":dense_residual",
            ":dense_data"],
)

drake_cc_library( 
    name = "fbstab_dense",
    srcs = ["fbstab_dense.h",
            "fbstab_dense.cc",
            "fbstab_algorithm.h",
            "fbstab_algorithm-inl.h"
    ],
    hdrs = ["fbstab_dense.h"],
    deps = [":static_matrix",
            ":dense_data",
            ":dense_variable",
            ":dense_residual",
            ":dense_feasibility",
            ":dense_linear_solver"],
)

drake_cc_googletest( # dense component unit tests
    name = "dense_component_tests",
    srcs = ["test/dense_component_tests.cc"],
    deps = [":static_matrix",
            ":dense_data",
            ":dense_variable",
            ":dense_residual",
            ":dense_feasibility",
            ":dense_linear_solver"],
)

drake_cc_binary( # build test
    name = "fbstab_dense_build_test",
    srcs = ["test/dense_fbstab_build_test.cc"],
    deps = [":static_matrix",
            ":dense_data",
            ":fbstab_dense"],
)

drake_cc_googletest( # unit tests
    name = "fbstab_dense_tests",
    srcs = ["test/dense_fbstab_tests.cc"],
    deps = [":static_matrix",
            ":fbstab_dense"
    ],
)

# FBstab MPC *************************************
drake_cc_library(
    name = "mpc_components",
    srcs = ["components/mpc_data.h",
            "components/mpc_variable.h",
            "components/mpc_residual.h",
            "components/ricatti_linear_solver.h",
            "components/mpc_feasibility.h",
            "components/mpc_data.cc",
            "components/mpc_variable.cc",
            "components/mpc_residual.cc",
            "components/ricatti_linear_solver.cc",
            "components/mpc_feasibility.cc"
    ],
    hdrs = ["components/mpc_data.h",
            "components/mpc_variable.h",
            "components/mpc_residual.h",
            "components/ricatti_linear_solver.h",
            "components/mpc_feasibility.h"
    ],
    deps = [":static_matrix"],
)

drake_cc_library(
    name = "fbstab_mpc",
    srcs = ["fbstab_mpc.h",
            "fbstab_mpc.cc",
            "fbstab_algorithm.h",
            "fbstab_algorithm-inl.h"
    ],
    hdrs = ["fbstab_mpc.h"],
    deps = [":static_matrix",
            ":mpc_components"],
)

drake_cc_googletest(
    name = "mpc_component_tests",
    srcs = ["test/mpc_component_tests.cc",
            "test/test_helpers.h"],
    deps = [":static_matrix",
            ":mpc_components"
    ],
)


drake_cc_binary(
    name = "mpc_build_test",
    srcs = ["test/fbstab_mpc_build_test.cc",
            "test/test_helpers.h"],
    deps = [":static_matrix",
            ":fbstab_mpc"],
)

drake_cc_googletest( # fbstab_mpc
    name = "mpc_tests",
    srcs = ["test/fbstab_mpc_tests.cc",
            "test/test_helpers.h"],
    deps = [":static_matrix",
            ":fbstab_mpc"
    ],
)




